class Node: 
    def __init__(self,value): 
        self.value = value 
        self.next = None

class Stack : 
    def __init__(self,value): 
       new_node = Node(value)
       self.top = new_node 
       self.height = 1 # makes stack vertical

    def print_stack(self): 
        temp = self.top 
        while temp is not None: 
            print(temp.value)
            temp = temp.next
    
    def push(self, value): 
        new_node = Node(value)
        if self.height == 0 : 
            self.top = new_node 
        
        else : 
            new_node.next = self.top
            self.top = new_node
        self.height +=1
    
    def pop(self): 
        if self.height == 0 : 
            return None
        
        else: 
            temp = self.top
            temp.next = None        
            self.top = self.top.next
            self.height -=1
            return temp
            
        



my_stack = Stack(4)

my_stack.push(3)
my_stack.print_stack()

print("It's time to pop:")

print(my_stack.pop())


class Queue: 
    def __init__(self,value): 
        new_node = Node(value)
        self.first = new_node
        self.last = new_node 
        self.length = 1 
    
    def print_queue(self): 
        temp = self.first
        while temp is not None: 
            print(temp.value)
            temp = temp.next
    
    def enqueue (self, value): 
        new_node = Node(value)
        if self.length == 0: 
            self.first = new_node 
            self.last = new_node
        
        else: 
            self.last.next = new_node
            self.last = new_node
        self.length +=1
    
    def dequeue (self): 
        if self.length == 0: 
            return None
        temp = self.first
        if self.length == 1: 
            self.first = None 
            self.last = None 
            return temp 
        self.first= self.first.next 
        temp.next = None
        self.length -= 1
        return temp

            

    



my_queue = Queue(18) 
my_queue.enqueue(5)
my_queue.dequeue()
my_queue.print_queue()



